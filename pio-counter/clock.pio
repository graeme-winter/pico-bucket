.program clock
    pull block
.wrap_target
rise:
    in x 32
    push
    mov x osr
high:
    in pins 1
    mov y isr
    jmp !y fall
    jmp x-- high
fall:
    in x 32
    push noblock
    mov x osr
low:
    in pins 1
    mov y isr
    jmp y-- rise
    jmp x-- low
.wrap

% c-sdk {

// Helper function (for use in C program) to initialize this PIO program
void clock_program_init(PIO pio, uint sm, uint offset, uint pin) {

    pio_sm_config c = clock_program_get_default_config(offset);
    pio_gpio_init(pio, pin);
    sm_config_set_in_pins(&c, pin);
    sm_config_set_jmp_pin(&c, pin);
    // sm_config_set_set_pins(&c, pin, 1);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, false);
    pio_sm_init(pio, sm, offset, &c);

    // initialise with as many ticks as possible TODO: count clock ticks
    // per iteration to make sure I know how many seconds this is worth
    pio->txf[sm] = 0xffffffff;
}

%}

